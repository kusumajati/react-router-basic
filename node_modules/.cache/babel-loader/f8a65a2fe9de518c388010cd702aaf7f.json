{"ast":null,"code":"var _jsxFileName = \"/home/mahendra/Documents/react/react-learn/exchange-rate-2/src/Currencies/Currencies.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport MainForm from '../common/MainForm';\nimport('../App.css');\n\nclass Currencies extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.saveConversion = () => {\n      this.setState(state => ({\n        savedConversion: 'BLA'\n      }), alert('conversion saved'), console.log(this.state.savedConversion, 'SAVED CONVERSION'));\n    };\n\n    this.changeValue = event => {\n      this.setState({\n        value: event.target.value\n      }, this.recalculate);\n    };\n\n    this.makeSelection = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      }, this.recalculate);\n    };\n\n    this.recalculate = () => {\n      const value = parseFloat(this.state.value);\n\n      if (isNaN(value)) {\n        return;\n      }\n\n      fetch(\"https://api.exchangeratesapi.io/latest?base=\".concat(this.state.base)).then(res => res.json()).then(data => {\n        this.setState({\n          converted: data.rates[this.state.target] * value\n        });\n      });\n    };\n\n    this.state = {\n      base: \"IDR\",\n      target: \"USD\",\n      value: 0,\n      currencies: [],\n      converted: 0,\n      savedConversion: ''\n    };\n    this.saveConversion = this.saveConversion.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.exchangeratesapi.io/latest\").then(response => response.json()).catch(error => console.error('Error:', error)).then(data => {\n      this.setState({\n        currencies: [...Object.keys(data.rates), \"EUR\"]\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(MainForm, {\n      makeSelection: this.makeSelection,\n      base: this.state.base,\n      selections: this.state.currencies,\n      changeValue: this.changeValue,\n      converted: this.state.converted,\n      target: this.state.target,\n      button: this.saveConversion,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(Link, {\n      to: {\n        pathname: \"/saved/\".concat(Date.now()),\n        state: {\n          savedConversion: this.state.savedConversion\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Link to Saved Conversions\"), React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Back To Home\"));\n  } //     class App extends React.Component {\n  //         render() {\n  //         return (\n  //             <div>\n  //          <Duit />    \n  //         </div>\n  //          );\n  //     }\n  // }\n\n\n}\n\nexport default Currencies;","map":{"version":3,"sources":["/home/mahendra/Documents/react/react-learn/exchange-rate-2/src/Currencies/Currencies.js"],"names":["React","Link","MainForm","Currencies","Component","constructor","props","saveConversion","setState","state","savedConversion","alert","console","log","changeValue","event","value","target","recalculate","makeSelection","name","parseFloat","isNaN","fetch","base","then","res","json","data","converted","rates","currencies","bind","componentDidMount","response","catch","error","Object","keys","render","pathname","Date","now"],"mappings":"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","sourcesContent":["\nimport React from 'react'\nimport {Link} from 'react-router-dom'\nimport MainForm from '../common/MainForm'\nimport('../App.css')\n\n\n\n\nclass Currencies extends React.Component {\n\n    constructor(props){\n        super(props)\n\n        \n        this.state = {\n            base: \"IDR\",\n            target:\"USD\",\n            value: 0,\n            currencies : [],\n            converted: 0,\n            savedConversion:''\n        }\n        this.saveConversion = this.saveConversion.bind(this)\n    }\n    componentDidMount(){\n        fetch(`https://api.exchangeratesapi.io/latest`)\n        .then(response => response.json())\n        .catch(error => console.error('Error:', error))\n        .then(data=> {\n           this.setState({\n               currencies:[...Object.keys(data.rates), \"EUR\" ]\n           })\n        })\n    }\n    render(){\n\n        return (\n            <div className='App'>\n                <MainForm \n                makeSelection={this.makeSelection} \n                base={this.state.base} \n                selections={this.state.currencies}\n                changeValue={this.changeValue}\n                converted={this.state.converted}\n                target={this.state.target}\n                button={this.saveConversion}\n                />\n                <Link to={{\n                    pathname:`/saved/${Date.now()}`,\n                    state:{\n                        savedConversion: this.state.savedConversion\n                    }\n                }}>\n                Link to Saved Conversions\n                </Link>\n                <Link to='/'>Back To Home</Link>\n\n            </div>\n        )\n    }\n\n    saveConversion=()=>{\n        this.setState(state=>({\n            savedConversion:'BLA'\n        }), alert('conversion saved'),console.log(this.state.savedConversion, 'SAVED CONVERSION'))\n        \n    }\n\n    changeValue = (event) => {\n        this.setState({\n            value: event.target.value\n        }, this.recalculate)\n    }\n\n    makeSelection = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        }, this.recalculate)\n    }\n\n    recalculate = () => {\n        const value = parseFloat(this.state.value);\n        \n        if (isNaN(value)) {\n            return;\n        }\n\n        fetch(`https://api.exchangeratesapi.io/latest?base=${this.state.base}`)\n        .then(res => res.json())\n        .then(data => {\n            this.setState({\n                converted: data.rates[this.state.target] * value\n            })\n        })\n    }\n\n//     class App extends React.Component {\n\n//         render() {\n//         return (\n//             <div>\n//          <Duit />    \n\n//         </div>\n//          );\n//     }\n// }\n}\n\nexport default Currencies\n        \n        \n\n"]},"metadata":{},"sourceType":"module"}