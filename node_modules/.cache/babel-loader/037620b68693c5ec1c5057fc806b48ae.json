{"ast":null,"code":"var _jsxFileName = \"/home/mahendra/Documents/react/react-learn/exchange-rate-2/src/Currencies/Currencies.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport MainForm from '../common/MainForm';\nimport('../App.css');\n\nclass Currencies extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.saveConversion = () => {\n      this.setState(state => (({\n        savedConversion: [...state.savedConversion, \"\".concat(this.state.base, \" \").concat(this.state.value, \" = \").concat(this.state.target, \" \").concat(this.state.converted, \", \").concat(Date(Date.now()))]\n      }), alert('conversion saved')));\n    };\n\n    this.changeValue = event => {\n      this.setState({\n        value: event.target.value\n      }, this.recalculate);\n    };\n\n    this.makeSelection = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      }, this.recalculate);\n    };\n\n    this.recalculate = () => {\n      const value = parseFloat(this.state.value);\n\n      if (isNaN(value)) {\n        return;\n      }\n\n      fetch(\"https://api.exchangeratesapi.io/latest?base=\".concat(this.state.base)).then(res => res.json()).then(data => {\n        this.setState({\n          converted: data.rates[this.state.target] * value\n        });\n      });\n    };\n\n    this.state = {\n      base: \"IDR\",\n      target: \"USD\",\n      value: 0,\n      currencies: [],\n      converted: 0,\n      savedConversion: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.exchangeratesapi.io/latest\").then(response => response.json()).catch(error => console.error('Error:', error)).then(data => {\n      this.setState({\n        currencies: [...Object.keys(data.rates), \"EUR\"]\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(MainForm, {\n      makeSelection: this.makeSelection,\n      base: this.state.base,\n      selections: this.state.currencies,\n      changeValue: this.changeValue,\n      converted: this.state.converted,\n      target: this.state.target,\n      button: this.saveConversion,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(Link, {\n      to: \"/saved\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Link to Saved Conversions\"), React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Back To Home\"));\n  } //     class App extends React.Component {\n  //         render() {\n  //         return (\n  //             <div>\n  //          <Duit />    \n  //         </div>\n  //          );\n  //     }\n  // }\n\n\n}\n\nexport default Currencies;","map":{"version":3,"sources":["/home/mahendra/Documents/react/react-learn/exchange-rate-2/src/Currencies/Currencies.js"],"names":["React","Link","MainForm","Currencies","Component","constructor","props","saveConversion","setState","state","savedConversion","base","value","target","converted","Date","now","alert","changeValue","event","recalculate","makeSelection","name","parseFloat","isNaN","fetch","then","res","json","data","rates","currencies","componentDidMount","response","catch","error","console","Object","keys","render"],"mappings":"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","sourcesContent":["\nimport React from 'react'\nimport {Link} from 'react-router-dom'\nimport MainForm from '../common/MainForm'\nimport('../App.css')\n\n\n\n\nclass Currencies extends React.Component {\n\n    constructor(props){\n        super(props)\n\n        \n        this.state = {\n            base: \"IDR\",\n            target:\"USD\",\n            value: 0,\n            currencies : [],\n            converted: 0,\n            savedConversion:[]    \n        }\n    }\n    componentDidMount(){\n        fetch(`https://api.exchangeratesapi.io/latest`)\n        .then(response => response.json())\n        .catch(error => console.error('Error:', error))\n        .then(data=> {\n           this.setState({\n               currencies:[...Object.keys(data.rates), \"EUR\" ]\n           })\n        })\n    }\n    render(){\n        return (\n            <div className='App'>\n                <MainForm \n                makeSelection={this.makeSelection} \n                base={this.state.base} \n                selections={this.state.currencies}\n                changeValue={this.changeValue}\n                converted={this.state.converted}\n                target={this.state.target}\n                button={this.saveConversion}\n                />\n                <Link to='/saved'>\n                Link to Saved Conversions\n                </Link>\n                <Link to='/'>Back To Home</Link>\n\n            </div>\n        )\n    }\n\n    saveConversion=()=>{\n        this.setState(state=>({\n            savedConversion:[...state.savedConversion, `${this.state.base} ${this.state.value} = ${this.state.target} ${this.state.converted}, ${Date(Date.now())}`]\n        }, alert('conversion saved')))\n        \n    }\n\n    changeValue = (event) => {\n        this.setState({\n            value: event.target.value\n        }, this.recalculate)\n    }\n\n    makeSelection = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        }, this.recalculate)\n    }\n\n    recalculate = () => {\n        const value = parseFloat(this.state.value);\n        \n        if (isNaN(value)) {\n            return;\n        }\n\n        fetch(`https://api.exchangeratesapi.io/latest?base=${this.state.base}`)\n        .then(res => res.json())\n        .then(data => {\n            this.setState({\n                converted: data.rates[this.state.target] * value\n            })\n        })\n    }\n\n//     class App extends React.Component {\n\n//         render() {\n//         return (\n//             <div>\n//          <Duit />    \n\n//         </div>\n//          );\n//     }\n// }\n}\n\nexport default Currencies\n        \n        \n\n"]},"metadata":{},"sourceType":"module"}